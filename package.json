{
    "publisher": "donnierich",
    "name": "donnierich-commit-ai",
    "displayName": "Commit AI",
    "description": "Commit messages made simple",
    "version": "0.0.4",
    "engines": {
        "vscode": "^1.77.0"
    },
    "categories": [
        "Other",
        "SCM Providers"
    ],
    "keywords": [
        "productivity",
        "git",
        "openai",
        "generate",
        "commit",
        "message",
        "vscode"
    ],
    "activationEvents": [],
    "main": "./out/extension.js",
    "icon": "media/icons/icon.png",
    "repository": {
        "url": "https://github.com/DonnieRich/commit-ai.git"
    },
    "contributes": {
        "commands": [
            {
                "command": "commit-ai.requestCommitSuggestion",
                "category": "Commit AI",
                "title": "[Commit AI] Request commit suggestion",
                "icon": {
                    "dark": "media/icons/lightbulb-autofix-dark.svg",
                    "light": "media/icons/lightbulb-autofix-light.svg"
                }
            },
            {
                "command": "commit-ai.setOpenAiApiKey",
                "category": "Commit AI",
                "title": "[Commit AI] Set API Key"
            },
            {
                "command": "commit-ai.clearOpenAiApiKey",
                "category": "Commit AI",
                "title": "[Commit AI] Clear API Key"
            }
        ],
        "menus": {
            "scm/title": [
                {
                    "command": "commit-ai.requestCommitSuggestion",
                    "when": "scmProvider == git && git.state == initialized",
                    "group": "navigation"
                },
                {
                    "command": "commit-ai.requestCommitSuggestion",
                    "when": "scmProvider == git && git.state == initialized",
                    "group": "inline"
                }
            ]
        },
        "configuration": {
            "title": "Commit AI",
            "properties": {
                "commit-ai.commitMessagePrompt": {
                    "type": "string",
                    "default": "You are a senior software developer. Analyze this git diff output and generate a commit message and a short description. The message must not exceed 50 characters count, the description may be a little longer. Provide your response in english. Be concise and minimal. Write only the message and the description. Example: Fixed bug on forEach cicle\n\nRemoved typo for array length in the condition",
                    "description": "The prompt used for the commit messages suggestions",
                    "maxLength": 400
                },
                "commit-ai.maxTokens": {
                    "type": "integer",
                    "default": 100,
                    "description": "The maximum number of tokens available to the API for the commit suggestion."
                },
                "commit-ai.temperature": {
                    "type": "number",
                    "default": 0.5,
                    "description": "What sampling temperature to use, between 0 and 2. Example: 0.8",
                    "maximum": 2
                },
                "commit-ai.gptModel": {
                    "type": "string",
                    "default": "gpt-3.5-turbo",
                    "enum": [
                        "gpt-3.5-turbo",
                        "gpt-4",
                        "gpt-4-32k",
                        "text-davinci-003",
                        "text-davinci-002",
                        "text-curie-001",
                        "text-babbage-001",
                        "text-ada-001"
                    ],
                    "markdownDescription": "ID of the model to use. See [Models Endpoint Compatibility](https://platform.openai.com/docs/models/model-endpoint-compatibility)"
                },
                "commit-ai.gptApiEndpoint": {
                    "type": "string",
                    "default": "createChatCompletion",
                    "enum": [
                        "createChatCompletion",
                        "createCompletion"
                    ],
                    "markdownDescription": "Endpoint to call. See [Models Endpoint Compatibility](https://platform.openai.com/docs/models/model-endpoint-compatibility)"
                }
            }
        }
    },
    "scripts": {
        "vscode:prepublish": "npm run compile",
        "compile": "tsc -p ./",
        "watch": "tsc -watch -p ./",
        "pretest": "npm run compile && npm run lint",
        "lint": "eslint src --ext ts",
        "test": "node ./out/test/runTest.js"
    },
    "devDependencies": {
        "@types/glob": "^8.1.0",
        "@types/mocha": "^10.0.1",
        "@types/node": "16.x",
        "@types/vscode": "^1.77.0",
        "@typescript-eslint/eslint-plugin": "^5.56.0",
        "@typescript-eslint/parser": "^5.56.0",
        "@vscode/codicons": "^0.0.32",
        "@vscode/test-electron": "^2.3.0",
        "eslint": "^8.36.0",
        "glob": "^8.1.0",
        "mocha": "^10.2.0",
        "typescript": "^4.9.5"
    },
    "dependencies": {
        "gpt-3-encoder": "^1.1.4",
        "openai": "^3.2.1"
    }
}